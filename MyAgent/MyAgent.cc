#include "tcl.h"#include "tclcl.h"#include <string.h>#include "MyAgent.h"static class MyAgentClass : public TclClass {public:        MyAgentClass() : TclClass("Agent/MyAgentOtcl") {}        TclObject* create(int, const char*const*) {                return(new MyAgent());        }} class_my_agent;MyAgent::MyAgent():Agent(PT_UDP){	bind("my_var1_otcl",&my_var1);	bind("my_var2_otcl",&my_var2);}int MyAgent::command(int argc,const char*const* argv){	if(argc==2)	{		if(strcmp(argv[1],"call-my-priv-func")==0)		{			myPriFunc();			return (TCL_OK);		}	}	return (Agent::command(argc,argv));}void MyAgent::myPriFunc(void){	Tcl& tcl=Tcl::instance();	tcl.eval("puts \"Message from MyAgent myPriFunc\"");	tcl.evalf("puts \"my_var1=%d\"",my_var1);	tcl.evalf("puts \"my_var2=%f\"",my_var2);	printf("%d",TclObject::lookup("my_var1_otcl"));}