#ifndef __mflood_h__#define __mflood_h__#include "mflood-seqtable.h"#include <sys/types.h>#include <cmu-trace.h>#include <priqueue.h>#include <classifier/classifier-port.h>//#define NOW (Scheduler::instance().clock())//should be set by the user using best guess#define NETWORK_DIAMETER 30 //30 hops//The followings are used for the forward() function. Controls pacing.#define FORWARD_DELAY 0.01	//random delay#define NO_DELAY -1.0 		//no delay//The Routing Agent class MFlood:public Agent{	friend class MFlood_RTEntry; //MFlood_RTEntry类是路由表项类public:	MFlood(nsaddr_t id);	//构造函数	void recv(Packet *p,Handler *);		//接收上层协议送下来的数据并处理protected:	int command(int,const char*const*);		//命令处理函数	inline int initialized(){	return 1&&target_;}	//查询路由表	void rt_resolve(Packet* p);	//转发函数	void forward(MFlood_RTEntry *rt,Packet *p,double delay);	nsaddr_t index_;	//本节点的IP地址		//路由表	MFlood_RTable rtable_;	//调试信息的输出	Trace *logtarget;	NsObject *uptarget_;	private:	u_int32_t myseq_;	//自己的序号，用于检测重复包protected:	/* for passing packets up to agents */	PortClassifier *dmux_;};#endif